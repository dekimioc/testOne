{"version":3,"sources":["components/Header/Header.js","components/Card/Card.js","components/Pagination/Pagintaion.js","components/ErrorModal/ErrorModal.js","components/Loader/Loader.js","components/CardsWrapper/CardsWrapper.js","App.js","reportWebVitals.js","fonts/Helvetica/Helvetica.ttf","index.js"],"names":["Header","title","className","id","Card","data","useState","clickedElement","setClickedEl","clickedImage","setClickedImage","useEffect","timer","setTimeout","clearTimeout","map","e","onClick","event","src","owner","avatar_url","alt","login","Object","keys","files","PaginationComponent","changeCurrentPage","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","previousLabel","ErrorModal","errorText","errorDetails","Loader","CardsWrapper","users","setUsers","pageNumber","setPageNumber","isLoaded","setIsLoaded","errorMessage","setErrorMessage","errorDetailsMessage","setErrorDetailsMessage","axios","get","process","then","response","status","catch","err","message","statusText","numPage","selected","window","scroll","top","left","behavior","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93d7e3ce.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './Header.style.scss'\r\n\r\nconst Header = ({title}) => {\r\n    return(\r\n        <div className=\"container-fluid\" id=\"header-container\">\r\n            <h1 className=\"text-left header-text mb-0\">{title}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './Card.style.scss'\r\n\r\nconst Card = ({data}) => {\r\n    const [clickedElement, setClickedEl] = useState(null)\r\n    const [clickedImage, setClickedImage] = useState(null)\r\n\r\n    const clickedElementHandler = (event) => {\r\n        setClickedEl(event)\r\n        setClickedImage(event)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setClickedImage(false);\r\n        }, 1100);\r\n        return () => clearTimeout(timer);\r\n    }, [clickedImage]);\r\n \r\n    return(\r\n        data.map(e => <div \r\n                        key={e.id} \r\n                        className={`user-card col-12 pt-3 pb-3 pl-0 d-flex flex-md-row align-items-center position-relative ${e.id === clickedElement ? \"clickedRow\" : ''}`} \r\n                        onClick={() => clickedElementHandler(e.id)}>\r\n                        <img className=\"user-image mr-3\" src={e.owner.avatar_url} alt={e.owner.login}/>\r\n                        <p className=\"mb-0 card-name\">{Object.keys(e.files)[0]}</p>\r\n                        <img className={`fading-image ${e.id === clickedImage ? \"animation\" : \"\"}`} src={e.owner.avatar_url} alt={e.owner.login}/>\r\n                    </div>)\r\n        \r\n    )\r\n}\r\n\r\nCard.propTypes = {\r\n  data: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Card","import ReactPaginate from 'react-paginate'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './Pagination.style.scss'\r\n\r\nconst PaginationComponent = ({changeCurrentPage}) => {\r\n    return (\r\n        <div className=\"pagination-container\">\r\n            <ReactPaginate \r\n                nextLabel={\">\"}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={100}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={1}\r\n                onPageChange={changeCurrentPage}\r\n                containerClassName={\"pagination\"}\r\n                subContainerClassName={\"pages pagination\"}\r\n                activeClassName={\"active\"}\r\n                previousLabel={\"<\"}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nPaginationComponent.propTypes = {\r\n  changeCurrentPage: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default PaginationComponent","import React from 'react'\r\nimport './ErrorModal.style.scss'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ErrorModal = ({ errorText, errorDetails }) => {\r\n  return (\r\n    <div className=\"error-message-container\">\r\n        <h1 className=\"color-error\">{errorText}</h1>\r\n        <p className=\"color-error\">{errorDetails}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nErrorModal.propTypes = {\r\n    errorText: PropTypes.number.isRequired,\r\n    errorDetails: PropTypes.string.isRequired\r\n}\r\n\r\nexport default ErrorModal\r\n","import React from 'react';\r\nimport './Loader.style.scss';\r\n\r\nconst Loader = () => (\r\n    <div className=\"spin-container\">\r\n        <div className=\"spin-content\">\r\n            <div className=\"loadingspinner\"></div>\r\n            <h1>Loading...</h1>\r\n        </div >\r\n    </div >\r\n);\r\n\r\nexport default Loader;","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport Card from '../Card/Card';\r\nimport PaginationComponent from '../Pagination/Pagintaion';\r\nimport ErrorModal from '../ErrorModal/ErrorModal';\r\n\r\nimport './CardsWrapper.style.scss';\r\nimport Loader from '../Loader/Loader';\r\n\r\nconst CardsWrapper = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [errorDetailsMessage, setErrorDetailsMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n    axios.get(process.env.REACT_APP_GIT_URL + `${pageNumber}`)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          setUsers(response.data)\r\n          setIsLoaded(true)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if(err.response.status === 403) {\r\n            setErrorMessage(err.response.status)\r\n            setErrorDetailsMessage(err.response.data.message)\r\n        } else if(err.response.status === 404) {\r\n            setErrorMessage(err.response.status)\r\n            setErrorDetailsMessage(err.response.statusText)\r\n        }\r\n      })\r\n  }, [pageNumber]);\r\n\r\n    const scrollToTopHandler = () => {\r\n        if (isLoaded) {\r\n          window.scroll({ top: 0, left: 0, behavior: 'smooth' });\r\n        }\r\n      }\r\n\r\n    const changeCurrentPage = numPage => {\r\n      setIsLoaded(false)\r\n      if (pageNumber === numPage.selected + 1) {\r\n        return\r\n      } else {\r\n        setPageNumber(numPage.selected + 1);\r\n        scrollToTopHandler();\r\n      }\r\n  };\r\n\r\n    return (\r\n    !errorMessage && errorMessage.length === 0 ? <div className=\"container-fluid\" id=\"cards-wrapper\">\r\n            {isLoaded ?  <Card data={users} /> : <Loader />}\r\n            <PaginationComponent changeCurrentPage={(numPage) => changeCurrentPage(numPage)}/>\r\n        </div> : <ErrorModal errorText={errorMessage} errorDetails={errorDetailsMessage}/> \r\n    )\r\n}\r\n\r\nexport default CardsWrapper;","import './App.scss';\nimport Header from './components/Header/Header';\nimport CardsWrapper from './components/CardsWrapper/CardsWrapper';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header title=\"Gists\" />\n        <CardsWrapper />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/Helvetica.ad8897e8.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n import './fonts/Helvetica/Helvetica.ttf';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}